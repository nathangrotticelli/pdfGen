// Generated by CoffeeScript 1.8.0
(function() {
  var DFont, TTFFont, TrueTypeCollection, WOFF2Font, WOFFFont, fs, r;

  r = require('restructure');

  fs = require('fs');

  TTFFont = require('./src/TTFFont');

  WOFFFont = require('./src/WOFFFont');

  WOFF2Font = require('./src/WOFF2Font');

  TrueTypeCollection = require('./src/TrueTypeCollection');

  DFont = require('./src/DFont');

  exports.TTFFont = TTFFont;

  exports.WOFFFont = WOFFFont;

  exports.WOFF2Font = WOFF2Font;

  exports.TrueTypeCollection = TrueTypeCollection;

  exports.DFont = DFont;

  exports.openSync = function(filename, postscriptName) {
    var buffer;
    buffer = fs.readFileSync(filename);
    return exports.create(buffer, postscriptName);
  };

  exports.open = function(filename, postscriptName, callback) {
    if (typeof postscriptName === 'function') {
      callback = postscriptName;
      postscriptName = null;
    }
    fs.readFile(filename, function(err, buffer) {
      var e, font;
      if (err) {
        return callback(err);
      }
      try {
        font = exports.create(buffer, postscriptName);
      } catch (_error) {
        e = _error;
        return callback(e);
      }
      return callback(null, font);
    });
  };

  exports.create = function(buffer, postscriptName) {
    var dfont, sig, stream, ttc;
    stream = new r.DecodeStream(buffer);
    sig = stream.readString(4);
    stream.pos = 0;
    switch (sig) {
      case 'ttcf':
        ttc = new TrueTypeCollection(stream);
        if (postscriptName) {
          return ttc.getFont(postscriptName);
        }
        return ttc;
      case 'wOFF':
        return new WOFFFont(stream);
      case 'wOF2':
        return new WOFF2Font(stream);
      case 'true':
      case 'OTTO':
      case String.fromCharCode(0, 1, 0, 0):
        return new TTFFont(stream);
      default:
        if (DFont.isDFont(stream)) {
          dfont = new DFont(stream);
          if (postscriptName) {
            return dfont.getFont(postscriptName);
          }
          return dfont;
        }
        throw new Error('Unknown font format');
    }
  };

}).call(this);
