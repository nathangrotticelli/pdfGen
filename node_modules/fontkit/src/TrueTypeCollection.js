// Generated by CoffeeScript 1.8.0
(function() {
  var Directory, TTFFont, TrueTypeCollection, r, tables;

  r = require('restructure');

  TTFFont = require('./TTFFont');

  Directory = require('./tables/directory');

  tables = require('./tables');

  TrueTypeCollection = (function() {
    var TTCHeader;

    TTCHeader = new r.VersionedStruct(r.uint32, {
      0x00010000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts')
      },
      0x00020000: {
        numFonts: r.uint32,
        offsets: new r.Array(r.uint32, 'numFonts'),
        dsigTag: r.uint32,
        dsigLength: r.uint32,
        dsigOffset: r.uint32
      }
    });

    function TrueTypeCollection(stream) {
      this.stream = stream;
      if (this.stream.readString(4) !== 'ttcf') {
        throw new Error('Not a TrueType collection');
      }
      this.header = TTCHeader.decode(this.stream);
    }

    TrueTypeCollection.prototype.getFont = function(name) {
      var directory, lang, nameTable, offset, substream, val, _i, _len, _ref, _ref1;
      _ref = this.header.offsets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        offset = _ref[_i];
        this.stream.pos = offset;
        directory = Directory.decode(this.stream, {
          _startOffset: 0
        });
        nameTable = directory.tables.name;
        if (!nameTable) {
          throw new Error("Font must have a name table.");
        }
        this.stream.pos = nameTable.offset;
        nameTable = tables.name.decode(this.stream);
        if (!nameTable.records.postscriptName) {
          throw new Error("Font must have a postscript name");
        }
        _ref1 = nameTable.records.postscriptName;
        for (lang in _ref1) {
          val = _ref1[lang];
          if (!(val === name)) {
            continue;
          }
          substream = new r.DecodeStream(this.stream.buffer);
          substream.pos = offset;
          return new TTFFont(substream);
        }
      }
      return null;
    };

    return TrueTypeCollection;

  })();

  module.exports = TrueTypeCollection;

}).call(this);
