// Generated by CoffeeScript 1.8.0
(function() {
  var CFFPointer, r,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  r = require('restructure');

  CFFPointer = (function(_super) {
    var Ptr;

    __extends(CFFPointer, _super);

    function CFFPointer(type, options) {
      if (options == null) {
        options = {};
      }
      if (options.type == null) {
        options.type = 'global';
      }
      CFFPointer.__super__.constructor.call(this, null, type, options);
    }

    CFFPointer.prototype.decode = function(stream, parent, operands) {
      this.offsetType = {
        decode: function() {
          return operands[0];
        }
      };
      return CFFPointer.__super__.decode.apply(this, arguments);
    };

    Ptr = (function() {
      function Ptr(val) {
        this.val = val;
        this.forceLarge = true;
      }

      Ptr.prototype.valueOf = function() {
        return this.val;
      };

      return Ptr;

    })();

    CFFPointer.prototype.encode = function(stream, value, ctx) {
      var ptr;
      if (!stream) {
        this.offsetType = {
          size: function() {
            return 0;
          }
        };
        this.size(value, ctx);
        return [new Ptr(0)];
      }
      ptr = null;
      this.offsetType = {
        encode: function(stream, val) {
          return ptr = val;
        }
      };
      CFFPointer.__super__.encode.apply(this, arguments);
      return [new Ptr(ptr)];
    };

    return CFFPointer;

  })(r.Pointer);

  module.exports = CFFPointer;

}).call(this);
