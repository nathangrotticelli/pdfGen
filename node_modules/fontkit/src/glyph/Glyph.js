// Generated by CoffeeScript 1.8.0
(function() {
  var Glyph, Path;

  Path = require('./Path');

  Glyph = (function() {
    var get;

    function Glyph(id, codePoints, _font) {
      this.id = id;
      this.codePoints = codePoints;
      this._font = _font;
    }

    get = function(key, fn) {
      return Object.defineProperty(Glyph.prototype, key, {
        get: fn,
        enumerable: true
      });
    };

    Glyph.prototype._getPath = function() {
      return new Path;
    };

    Glyph.prototype._getCBox = function() {
      return this.path.cbox;
    };

    Glyph.prototype._getBBox = function() {
      return this.path.bbox;
    };

    get('cbox', function() {
      return this._cbox != null ? this._cbox : this._cbox = this._getCBox();
    });

    get('bbox', function() {
      return this._bbox != null ? this._bbox : this._bbox = this._getBBox();
    });

    get('path', function() {
      return this._path != null ? this._path : this._path = this._getPath();
    });

    get('advanceWidth', function() {
      return this._font.widthOfGlyph(this.id);
    });

    get('ligatureCaretPositions', function() {});

    Glyph.prototype.render = function(ctx, size) {
      var fn;
      ctx.save();
      ctx.scale(1 / this._font.head.unitsPerEm * size);
      fn = this.path.toFunction();
      fn(ctx);
      ctx.fill();
      return ctx.restore();
    };

    return Glyph;

  })();

  module.exports = Glyph;

}).call(this);
